// Generated by LiveScript 1.4.0
(function(){
  var history_pages, history_visits, LZString, uncompress_data_field, exports;
  history_pages = require('./Schema/history_pages');
  history_visits = require('./Schema/history_visits');
  LZString = require('lz-string');
  uncompress_data_field = function(doc){
    if (doc == null || doc.data == null || typeof doc.data !== 'string') {
      return doc;
    }
    doc.data = JSON.parse(LZString.decompressFromBase64(doc.data));
    return doc;
  };
  exports = module.exports = function(app){
    app.get('/view_history_pages', function(req, res){
      return history_pages.find().lean().exec(function(err, docs){
        var doc;
        res.type('text/plain');
        return res.send(JSON.stringify((function(){
          var i$, ref$, len$, results$ = [];
          for (i$ = 0, len$ = (ref$ = docs).length; i$ < len$; ++i$) {
            doc = ref$[i$];
            results$.push(uncompress_data_field(doc));
          }
          return results$;
        }())));
      });
    });
    return app.get('/view_history_visits', function(req, res){
      return history_visits.find().lean().exec(function(err, docs){
        var doc;
        res.type('text/plain');
        return res.send(JSON.stringify((function(){
          var i$, ref$, len$, results$ = [];
          for (i$ = 0, len$ = (ref$ = docs).length; i$ < len$; ++i$) {
            doc = ref$[i$];
            results$.push(uncompress_data_field(doc));
          }
          return results$;
        }())));
      });
    });
  };
}).call(this);
