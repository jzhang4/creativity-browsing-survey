// Generated by LiveScript 1.4.0
(function(){
  var get_num_days_with_browsing, get_eligibility, post_json, post_history_pages_compressed, post_history_visits_compressed_parts, post_history, submit_browsing_history, out$ = typeof exports != 'undefined' && exports || this;
  out$.get_num_days_with_browsing = get_num_days_with_browsing = function(callback){
    return getFieldsFromExtensionUncached(['chrome_history_num_days_with_browsing'], function(data){
      return callback(data.chrome_history_num_days_with_browsing);
    });
  };
  out$.get_eligibility = get_eligibility = function(callback){
    return get_num_days_with_browsing(function(num_days_with_browsing){
      return callback(num_days_with_browsing > 20);
    });
  };
  post_json = function(url, data, callback){
    return $.ajax({
      type: 'POST',
      url: url,
      contentType: 'application/json',
      data: JSON.stringify(data),
      error: function(err){
        console.log('had error while posting data');
        return console.log(err);
      },
      complete: function(){
        return typeof callback == 'function' ? callback() : void 8;
      }
    });
  };
  post_history_pages_compressed = function(history_pages, hid, callback){
    return post_json('/log_history_pages', {
      data: history_pages,
      user: username,
      hid: hid,
      time: hid,
      timeloc: new Date(hid).toString()
    }, callback);
  };
  post_history_visits_compressed_parts = function(history_visits_parts, hid, callback){
    var num_parts;
    num_parts = history_visits_parts.length;
    return async.forEachOfSeries(history_visits_parts, function(history_visits, idx, donecb){
      return post_json('/log_history_visits', {
        data: history_visits,
        user: username,
        hid: hid,
        time: hid,
        timeloc: new Date(hid).toString(),
        idx: idx,
        totalparts: num_parts
      }, donecb);
    }, function(){
      return typeof callback == 'function' ? callback() : void 8;
    });
  };
  post_history = function(data, callback){
    return post_history_pages(data.chrome_history_pages, function(){
      return post_history_visits(data.chrome_history_visits, function(){
        return typeof callback == 'function' ? callback() : void 8;
      });
    });
  };
  out$.submit_browsing_history = submit_browsing_history = function(callback){
    console.log('submit_browsing_history');
    return getFieldsFromExtensionUncached(['chrome_history_pages_compressed'], function(data1){
      return getFieldsFromExtensionUncached(['chrome_history_visits_compressed_parts'], function(data2){
        var hid;
        hid = Date.now();
        return post_history_pages_compressed(data1.chrome_history_pages_compressed, hid, function(){
          return post_history_visits_compressed_parts(data2.chrome_history_visits_compressed_parts, hid, function(){
            return callback();
          });
        });
      });
    });
  };
}).call(this);
